import { useState } from 'react';
import './Chatbot.css';

const Chatbot = () => {
    const [question, setQuestion] = useState('');
    const [answer, setAnswer] = useState('');
    const [searchQuery, setSearchQuery] = useState('');
    const [searchResults, setSearchResults] = useState([]);
    const [selectedPath, setSelectedPath] = useState('');

    // üîç ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå
    const handleSearchFiles = async () => {
        try {
            const res = await fetch('http://localhost:8000/chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message: searchQuery }),
            });

            const data = await res.json();
            setSearchResults(data);
        } catch (err) {
            console.error('Error searching files:', err);
        }
    };

    // üí¨ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
    const handleAsk = async () => {
        if (!selectedPath) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }

        try {
            const res = await fetch('http://localhost:8000/ask-file', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ path: selectedPath, question }),
            });

            const data = await res.json();
            setAnswer(data.answer);
        } catch (err) {
            console.error('Error calling chatbot:', err);
            setAnswer('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
        }
    };

    return (
        <div className="container">
            <div className="search-box">
                <label>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå</label>
                <input
                    type="text"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                />
                <button onClick={handleSearchFiles}>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>
            </div>

            <div className="file-results">
                <h4>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö</h4>
                <ul>
                    {searchResults.map((file, index) => (
                        <li key={index}>
                            <strong>{file.name}</strong>
                            <button onClick={() => setSelectedPath(file.path)}>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</button>
                        </li>
                    ))}
                </ul>
                {selectedPath && (
                    <p>
                        ‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: <code>{selectedPath}</code>
                    </p>
                )}
            </div>

            <div className="quesstion-box">
                <label>‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå</label>
                <input
                    type="text"
                    value={question}
                    onChange={(e) => setQuestion(e.target.value)}
                />
                <button onClick={handleAsk}>‡∏ñ‡∏≤‡∏°</button>
            </div>

            <div className="answer-box">
                <h6>{answer}</h6>
            </div>
        </div>
    );
};

export default Chatbot;
